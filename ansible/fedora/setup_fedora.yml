---
- hosts: localhost
  become: yes

  vars:
    git_conf_dir: /home/jflory/git/conf
    target_user: jflory
    user_home_dir: /home/jflory

  tasks:
    - name: import third-party repository signing keys
      rpm_key: key={{ item }} state=present
      with_items:
        - https://download.sublimetext.com/sublimehq-rpm-pub.gpg
        - https://negativo17.org/repos/RPM-GPG-KEY-slaanesh

    - name: add RPM Fusion repositories
      package:
        state: present
        name:
          - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-28.noarch.rpm
          - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-28.noarch.rpm

    - name: add other third-party repositories
      shell: dnf config-manager --add-repo {{ item }}
      with_items:
        - https://negativo17.org/repos/fedora-flash-plugin.repo
        - https://negativo17.org/repos/fedora-spotify.repo
        - https://download.sublimetext.com/rpm/stable/x86_64/sublime-text.repo
      args:
        warn: no

    - name: remove unused packages
      package:
        state: absent
        name:
          - gnome-boxes
          - gnome-calendar
          - gnome-characters
          - gnome-classic-session
          - gnome-contacts
          - gnome-documents
          - gnome-documents-libs
          - gnome-getting-started-docs
          - gnome-initial-setup
          - gnome-maps
          - gnome-photos
          - gnome-system-monitor
          - gnome-weather
          - powerline
          - ntp
          - tmux-powerline

    - name: install base packages
      ### Package notes ###
      # chromaprint-tools: Capture digital fingerprints of audio files
      # dunst: Simple and configurable notification-daemon
      # gstreamer1-plugins-bad-nonfree: MPEG2 codec support
      # jpegoptim: Utility to optimize JPEG files
      # meld: Visual diff and merge tool
      # network-manager-applet: Network control / status applet for NetworkManager
      package:
        state: latest
        name:
          - ansible
          - ansible-python3
          - arandr
          - blueman
          - brasero
          - brasero-nautilus
          - bugwarrior
          - chromaprint-tools
          - docker
          - dunst
          - epiphany
          - feh
          - ffmpeg
          - firewalld
          - flash-plugin
          - git
          - gnome-shell-extension-pomodoro
          - gobby05
          - golang
          - google-roboto-slab-fonts
          - gstreamer-ffmpeg
          - gstreamer1-plugins-bad-free-extras
          - gstreamer1-plugins-bad-nonfree
          - gstreamer1-plugins-ugly
          - hexchat
          - htop
          - i3
          - i3lock
          - inkscape
          - jpegoptim
          - jq
          - libvirt
          - libvirt-devel
          - meld
          - mpv
          - nautilus-dropbox
          - network-manager-applet
          - npm
          - overpass-fonts
          - overpass-mono-fonts
          - pandoc
          - pass
          - pavucontrol
          - picard
          - powerline-fonts
          - pulseaudio-utils
          - python2-flake8
          - python3-flake8
          - ripright
          - smartmontools
          - spotify-client
          - strace
          - sublime-text
          - task
          - telegram-desktop
          - thunderbird
          - thunderbird-enigmail
          - tmux
          - typetype-molot-fonts
          - '@vagrant'
          - vagrant-doc
          - vagrant-sshfs
          - vim
          - '@virtualization'
          - visualboyadvance-m

    - name: start and enable firewalld
      service:
        name: firewalld
        state: started
        enabled: yes

    - name: add target user
      user: name={{ target_user }} comment='Justin W. Flory' groups=docker,libvirt,wheel append=yes

    - name: configure dotfiles
      become_user: "{{ target_user }}"
      git: repo=https://github.com/jwflory/conf.git dest={{ git_conf_dir }}

    - name: populate config directories
      become_user: "{{ target_user }}"
      file: path={{ user_home_dir }}/{{ item }} state=directory
      with_items:
        - .bash_completion.d
        - .config/bugwarrior
        - .config/dunst
        - .config/i3
        - .npm-global
        - .ssh
        - .vim/autoload
        - .vim/bundle
        - wkspc

    - name: configure bash
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/bash/{{ item }} dest={{ user_home_dir }}/.{{ item }} state=link
      with_items:
        - bashrc
        - bash_profile

    - name: configure bash auto-completion scripts
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/taskwarrior/{{ item }} dest={{ user_home_dir }}/.bash_completion.d/{{ item }} state=link
      with_items:
        - task.sh

    - name: configure bugwarrior
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/bugwarrior/bugwarriorrc dest={{ user_home_dir }}/.config/bugwarrior/bugwarriorrc state=link

    - name: configure dunst
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/dunst/dunstrc dest={{ user_home_dir }}/.config/dunst/dunstrc state=link

    - name: configure git
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/git/{{ item }} dest={{ user_home_dir }}/.{{ item }} state=link
      with_items:
        - gitconfig
        - gitconfig-jump
        - gitconfig-unicef

    - name: configure i3wm
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/i3wm/{{ item }} dest={{ user_home_dir }}/.config/i3/{{ item }} state=link
      with_items:
        - config
        - fuzzy_lock.sh
        - i3exit.sh
        - i3status.conf

    - name: configure npm
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/npm/npmrc dest={{ user_home_dir }}/.npmrc state=link

    - name: configure ssh
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/ssh/config dest={{ user_home_dir }}/.ssh/config state=link

    - name: configure task
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/taskwarrior/taskrc.fedora dest={{ user_home_dir }}/.taskrc state=link

    - name: configure tmux
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/tmux/tmux.conf dest={{ user_home_dir }}/.tmux.conf state=link

    - name: configure vim
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/vim/vimrc dest={{ user_home_dir }}/.vimrc state=link

    - name: configure vim - pathogen
      become_user: "{{ target_user }}"
      get_url: url=https://tpo.pe/pathogen.vim dest={{ user_home_dir }}/.vim/autoload/pathogen.vim mode=0750

    - name: add vim plugin - code_complete
      become_user: "{{ target_user }}"
      git: repo=https://github.com/mbbill/code_complete.git dest={{ user_home_dir }}/.vim/bundle/vim-code-complete

    - name: add vim plugin - Dockerfile.vim
      become_user: "{{ target_user }}"
      git: repo=https://github.com/ekalinin/Dockerfile.vim.git dest={{ user_home_dir }}/.vim/bundle/vim-dockerfile

    - name: add vim plugin - syntastic
      become_user: "{{ target_user }}"
      git: repo=https://github.com/vim-syntastic/syntastic.git dest={{ user_home_dir }}/.vim/bundle/vim-syntastic

    - name: add vim plugin - vim-airline
      become_user: "{{ target_user }}"
      git: repo=https://github.com/vim-airline/vim-airline.git dest={{ user_home_dir }}/.vim/bundle/vim-airline

    - name: add vim plugin - vim-closetag
      become_user: "{{ target_user }}"
      git: repo=https://github.com/alvan/vim-closetag.git dest={{ user_home_dir }}/.vim/bundle/vim-closetag

    - name: add vim plugin - vim-flake8
      become_user: "{{ target_user }}"
      git: repo=https://github.com/nvie/vim-flake8.git dest={{ user_home_dir }}/.vim/bundle/vim-flake8

    - name: add vim plugin - vim-jinja
      become_user: "{{ target_user }}"
      git: repo=https://github.com/mitsuhiko/vim-jinja.git dest={{ user_home_dir }}/.vim/bundle/vim-jinja

    - name: add vim plugin - vim-snippets
      become_user: "{{ target_user }}"
      git: repo=https://github.com/honza/vim-snippets.git dest={{ user_home_dir }}/.vim/bundle/vim-snippets

    - name: add vim plugin - vim-surround
      become_user: "{{ target_user }}"
      git: repo=https://github.com/tpope/vim-surround.git dest={{ user_home_dir }}/.vim/bundle/vim-surround
   
    - name: install golang package - powerline-go
      # COOL EXAMPLE: Must use shell module over command module since GOPATH is
      # found in user's bash_profile. This is used for a custom path for Go
      # package binaries.
      become_user: "{{ target_user }}"
      shell: go get -u github.com/justjanne/powerline-go creates={{ user_home_dir }}/wkspc/go/bin/powerline-go

    - name: (hack) move powerline-go to correct path
      become_user: "{{ target_user }}"
      command: mv {{ user_home_dir }}/go {{ user_home_dir }}/wkspc/go
      args:
        creates: "{{ user_home_dir }}/wkspc/go"
        removes:  "{{ user_home_dir }}/go"

    - name: (hack) create powerline-go system-level symbolic link
      file: src={{ user_home_dir }}/wkspc/go/bin/powerline-go dest=/usr/bin/powerline-go state=link
